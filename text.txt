TASKS
* Make sure handleTextSelection() isn't called when text is already bookmarked
* Create functions for the tooltip and export them to bookmarker-content.js
* Fix the span elements being created from the handleTextSelection method



/*
  - CASES
    - When user selects a piece of text -> handleTextSelection()
    - When user bookmarks a piece of text -> addBookmark()
    - When user clicks outside a selected piece of text -> removeSelectedTextSpan()
    - When user clicks outside a bookmarked piece of text without selecting other text -> handleTextSelection()
    - When user selects a piece of text when there's already a bookmark -> "Do you wish to bookmark this text?"
    - When user clicks on a bookmarked piece of text -> handleTextSelection() | handleBookmarkSelection() -> removeBookmark()
    - When user clicks anywhere on the page without selecting text -> handleTextSelection()
*/


  /*const anchorNode = parentNode.childNodes[bookmarkByPage.anchorNodeIndex];
  const focusNode = parentNode.childNodes[bookmarkByPage.focusNodeIndex];*/


  /*const test = await calculateSelectionData(selectionObject);
  console.log(test);*/


  /*const childNodesArray = Array.from(selectionObject.anchorNode.parentNode.childNodes);
  const childNodesArray1 = Array.from(selectionObject.focusNode.parentNode.childNodes);

  console.log(selectionObject.focusNode.parentNode.childNodes);

  const anchorNodeIndex = childNodesArray.indexOf(selectionObject.anchorNode);
  const focusNodeIndex = childNodesArray1.indexOf(selectionObject.focusNode);
  
  console.log(`anchorNodeIndex: ${anchorNodeIndex}`);
  console.log(`focusNodeIndex: ${focusNodeIndex}`);*/




    /*if(selectionObject.anchorOffset < selectionObject.focusOffset){
      range.setStart(anchorNode, anchorOffset);
      range.setEnd(focusNode, focusOffset);
    }else{
      range.setStart(focusNode, focusOffset);
      range.setEnd(anchorNode, anchorOffset);
    }*/